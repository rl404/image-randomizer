basePath: /
definitions:
  service.CreateImageRequest:
    properties:
      image:
        type: string
    required:
    - image
    type: object
  service.Image:
    properties:
      id:
        type: integer
      image:
        type: string
      user_id:
        type: integer
    type: object
  service.JWTClaim:
    properties:
      user_id:
        type: integer
    type: object
  service.LoginRequest:
    properties:
      password:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  service.RegisterRequest:
    properties:
      password:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  service.Token:
    properties:
      access_token:
        type: string
      refresh_token:
        type: string
    type: object
  service.UpdateImageRequest:
    properties:
      image:
        type: string
    required:
    - image
    type: object
  utils.Response:
    properties:
      data:
        type: object
      message:
        type: string
      status:
        type: integer
    type: object
info:
  contact: {}
  description: Image randomizer API.
  title: Image Randomizer API
paths:
  /images:
    get:
      parameters:
      - description: Bearer jwt.access.token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/utils.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/service.Image'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/utils.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.Response'
      summary: Get images.
      tags:
      - Image
    post:
      parameters:
      - description: Bearer jwt.access.token
        in: header
        name: Authorization
        required: true
        type: string
      - description: request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/service.CreateImageRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            allOf:
            - $ref: '#/definitions/utils.Response'
            - properties:
                data:
                  $ref: '#/definitions/service.Image'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/utils.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.Response'
      summary: Create image.
      tags:
      - Image
  /images/{image_id}:
    delete:
      parameters:
      - description: Bearer jwt.access.token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/utils.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.Response'
      summary: Delete image.
      tags:
      - Image
    patch:
      parameters:
      - description: Bearer jwt.access.token
        in: header
        name: Authorization
        required: true
        type: string
      - description: request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/service.UpdateImageRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/utils.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.Response'
      summary: Update image.
      tags:
      - Image
  /login:
    post:
      parameters:
      - description: request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/service.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/utils.Response'
            - properties:
                data:
                  $ref: '#/definitions/service.Token'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.Response'
      summary: Login.
      tags:
      - User
  /register:
    post:
      parameters:
      - description: request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/service.RegisterRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            allOf:
            - $ref: '#/definitions/utils.Response'
            - properties:
                data:
                  $ref: '#/definitions/service.Token'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.Response'
      summary: Register.
      tags:
      - User
  /token/check:
    get:
      parameters:
      - description: Bearer jwt.access.token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/utils.Response'
            - properties:
                data:
                  $ref: '#/definitions/service.JWTClaim'
              type: object
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/utils.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.Response'
      summary: Check Token
      tags:
      - Token
  /token/refresh:
    post:
      parameters:
      - description: Bearer jwt.refresh.token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/utils.Response'
            - properties:
                data:
                  $ref: '#/definitions/service.Token'
              type: object
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/utils.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.Response'
      summary: Refresh Token
      tags:
      - Token
  /user/{username}/image.jpg:
    get:
      produces:
      - application/json
      - image/jpeg
      responses:
        "200":
          description: OK
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.Response'
      summary: Get random image.
      tags:
      - User
schemes:
- http
- https
swagger: "2.0"
